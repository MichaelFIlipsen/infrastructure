version: "3.7"

#ideas taken from https://knplabs.com/en/blog/how-to-dockerise-a-symfony-4-project

services:
  backoffice_php_fpm:
    image: basicrum/backoffice_php_fpm:0.0.1
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
    environment:
      APP_ENV: prod
      DATABASE_URL: mysql://roottest:roottest@db:3306/basicrum_demo
      APP_SECRET: a61405770c0c9097569cd6c494a60a7b
      CATCHER_ENDPOINT: http://test11:test22@10.0.2.1/excavator/digger.php
      MONITORED_ORIGIN: www.darvart.de
    depends_on:
      - db
    links:
      - db
    networks:
      - bo

  backoffice_init:
    image: basicrum/backoffice_php_fpm:0.0.1
    deploy:
      restart_policy:
        condition: none
    environment:
      APP_ENV: prod
      DATABASE_URL: mysql://roottest:roottest@db:3306/basicrum_demo
      APP_SECRET: a61405770c0c9097569cd6c494a60a7b
    command: "sh /usr/src/app/init.sh"
    depends_on:
      - db
    links:
      - db
    networks:
      - bo

  db:
    image: mysql:8.0.15
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: rootsecret
      MYSQL_DATABASE: basicrum_demo
      MYSQL_USER: roottest
      MYSQL_PASSWORD: roottest
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - bo

  traefik:
    image: "traefik:v2.0"
    command:
      - "--api.dashboard=false" # @todo: enable it with basic-auth
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myhttpchallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myhttpchallenge.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx
    networks:
      - bo

  nginx: # we have to use it till https://github.com/containous/traefik/issues/753 is open
    image: basicrum/backoffice_nginx:0.0.1
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.bo-http.rule=Host(`${DOMAIN}`)"
        - "traefik.http.routers.bo-http.entrypoints=web"
        - "traefik.http.routers.bo-http.middlewares=redirect"
        - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.bo-https.rule=Host(`${DOMAIN}`)"
        - "traefik.http.services.bo-https.loadbalancer.server.port=80"
        - "traefik.http.routers.bo-https.entrypoints=websecure"
        - "traefik.http.routers.bo-https.tls.certresolver=myhttpchallenge"
    depends_on:
      - backoffice_php_fpm
    networks:
      - bo

networks:
  bo:
    driver: overlay
    attachable: true

volumes:
  mysql: {}
  letsencrypt: {}

